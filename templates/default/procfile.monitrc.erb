# ---------------------------------------------------------------
# Monit configuration file generated by application_procfile for:
# <%= "#{@name}-#{@type}" %>
# ---------------------------------------------------------------

<% @number.times do |i| %>
check process <%= "#{@name}-#{@type}-#{i}" %> with pidfile <%= @pid_path %>/<%= @type %>-<%= i %>.pid
  depends on <%= "#{@name}-#{@type}" %>.restart
  depends on <%= "#{@name}-#{@type}" %>.reload
  start program = "/bin/bash -c 'PID_FILE=<%= @pid_path %>/<%= @type %>-<%= i %>.pid; <%= "PORT=#{@environment_attributes['PORT'].to_i + i}; " if @environment_attributes.has_key?('PORT') %>/etc/init.d/<%= "#{@name}-#{@type}" %> start'" with timeout 60 seconds
  stop program  = "/bin/bash -c 'PID_FILE=<%= @pid_path %>/<%= @type %>-<%= i %>.pid /etc/init.d/<%= "#{@name}-#{@type}" %> stop'" with timeout 60 seconds
  group <%= "#{@name}-#{@type}" %>
  <% if @options %>
    <% if @options.has_key?(:limit) && @options[:limit].respond_to?(:has_key?) %>
      <% [:mem, :totalmem, :cpu, :totalcpu, :children].each do |limit| %>
        <% if @options[:limit].has_key?(limit) %>
  if <%= limit.to_s %> > <%= @options[:limit][limit] %> for <%= @options[:limit].has_key?(:unhealthy) ? @options[:limit][:unhealthy].to_s : '5' %> cycles then <%= (@options[:limit].has_key?(:action) && [:alert, :restart, :stop].include?(@options[:limit][:action])) ? @options[:limit][:action].to_s : 'restart' %>
        <% end %>
      <% end %>
    <% end %>
    <% if @options.has_key?(:health_check) && @options[:health_check].respond_to?(:has_key?) && (@options[:health_check].has_key?(:port) || @environment_attributes.has_key?('PORT')) %>
  if failed port <%= @environment_attributes.has_key?('PORT') ? @environment_attributes['PORT'].to_i + i : @options[:health_check][:port].to_i + i %> protocol HTTP <%= "request \"#{@options[:health_check][:path]}\" " if @options[:health_check].has_key?(:path) %>with timeout <%= @options[:health_check].has_key?(:timeout) ? @options[:health_check][:timeout].to_s : '10' %> seconds for <%= @options[:health_check].has_key?(:unhealthy) ? @options[:health_check][:unhealthy].to_s : '5' %> cycles then <%= (@options[:health_check].has_key?(:action) && [:alert, :restart, :stop].include?(@options[:health_check][:action])) ? @options[:health_check][:action].to_s : 'restart' %>
    <% end %>
  <% end %>
<% end %>

check file <%= "#{@name}-#{@type}" %>.restart with path <%= @lock_path %>/<%= @type %>.restart
  if changed timestamp then restart

check file <%= "#{@name}-#{@type}" %>.reload with path <%= @lock_path %>/<%= @type %>.reload
<% if @unicorn %>
  if changed timestamp then exec "/bin/bash -c 'pid=$(cat <%= @pid_path %>/<%= @type %>-*.pid); kill -s HUP $pid; sleep 5; kill -s USR2 $pid'"
<% elsif @options && @options.has_key?(:reload) %>
  if changed timestamp then exec "/bin/bash -c 'kill -s <%= @options[:reload] %> $(cat <%= @pid_path %>/<%= @type %>-*.pid)'"
<% else %>
  if changed timestamp then restart
<% end %>
